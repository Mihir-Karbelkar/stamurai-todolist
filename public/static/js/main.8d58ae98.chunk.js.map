{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","this","props","item","handleChange","handleSubmit","editItem","className","onSubmit","type","value","date","onChange","name","placeholder","id","high","med","low","priority","style","height","borderRadius","title","desc","Component","TodoItem","row","handleDelete","handleEdit","split","length","err","prior","onClick","wrap","rows","readOnly","TodoList","items","clearList","map","key","socket","process","PORT","socketIOClient","App","e","target","setState","preventDefault","updatedItems","newItem","state","splice","index","uuid","emit","filteredItems","filter","findIndex","filteredItem","response","endpoint","on","data","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d58ae98.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\nexport default class TodoInput extends Component {\n  render() {\n    let buttonCSS = {\n      high: \"btn-danger text-white\",\n      med: \"btn-warning text-white\",\n      low: \"btn-primary text-white\"\n    };\n    const { item, handleChange, handleSubmit, editItem } = this.props;\n    return (\n      <div className=\"card card-body my-3\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"d-flex justify-content-between my-2\">\n            <div className=\"form-group w-50\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text bg-primary text-white\">\n                    <i className=\"fa fa-calendar\"></i>\n                  </div>\n                </div>\n                <input\n                  type=\"text\"\n                  value={item.date || \"\"}\n                  onChange={handleChange}\n                  className=\"form-control  w-25\"\n                  name=\"date\"\n                  placeholder=\"Date\"\n                />\n              </div>\n            </div>\n\n            <select\n              name=\"priority\"\n              id=\"priority\"\n              className={buttonCSS[item.priority]}\n              value={item.priority || \"high\"}\n              onChange={handleChange}\n              style={{ height: \"38px\", borderRadius: \"10px\" }}\n            >\n              <option value=\"high\">High</option>\n              <option value=\"med\">Medium</option>\n              <option value=\"low\">Low</option>\n            </select>\n          </div>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text bg-primary text-white\">\n                <i className=\"fa fa-book\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Title\"\n              name=\"title\"\n              value={item.title || \"\"}\n              onChange={handleChange}\n            />\n          </div>\n          <textarea\n            type=\"text\"\n            className=\"form-control rounded-0 mt-2\"\n            placeholder=\"Desc\"\n            name=\"desc\"\n            value={item.desc || \"\"}\n            onChange={handleChange}\n          />\n          <button\n            type=\"submit\"\n            className={\n              editItem\n                ? \"btn btn-block  btn-success mt-3\"\n                : \"btn btn-block  btn-primary mt-3\"\n            }\n          >\n            {editItem ? \"edit item\" : \"add item\"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TodoItem extends Component {\n  render() {\n    const { item, handleDelete, handleEdit } = this.props;\n    const buttonCSS = {\n      high: \"danger\",\n      med: \"warning\",\n      low: \"primary\"\n    };\n    let row;\n    try {\n      row = item.item.desc.split(\"\\n\").length;\n    } catch (err) {\n      row = 1;\n    }\n    let prior = buttonCSS[item.item.priority];\n    return (\n      <li className=\"list-group-item  my-2\">\n        <div className={\"card mb-3\"}>\n          <div\n            className={\n              \"card-header  text-capitalize d-flex justify-content-between\"\n            }\n          >\n            <div className=\"\">{item.item.date}</div>\n            <div className=\"mr-2\">\n              <span\n                className={\n                  \"badge badge-\" +\n                  prior +\n                  \" h-100 mr-2 text-capitalize  disabled\"\n                }\n              >\n                {item.item.priority}\n              </span>\n              <button\n                className=\"btn btn-outline-success mr-2\"\n                onClick={handleEdit}\n              >\n                <span className=\"fa fa-edit\"></span>\n              </button>\n              <button\n                className=\"btn btn-outline-danger mr-0\"\n                onClick={handleDelete}\n              >\n                <span className=\"fa fa-trash\"></span>\n              </button>\n            </div>\n          </div>\n          <div className={\"card-body \"}>\n            <h5 className=\"card-title\">{item.item.title}</h5>\n            <textarea\n              className=\"card-text w-100\"\n              wrap=\"hard\"\n              rows={row}\n              readOnly\n              value={item.item.desc || \"\"}\n            ></textarea>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nexport default class TodoList extends Component {\n  render() {\n    const { items, clearList, handleDelete, handleEdit } = this.props;\n    return (\n      <div>\n        <ul className=\"list-group my-5\">\n          <h3 className=\"text-capitalize text-center\">todo list</h3>\n          {items.map(item => {\n            return (\n              <TodoItem\n                key={item.id}\n                item={item}\n                handleDelete={() => handleDelete(item.id)}\n                handleEdit={() => handleEdit(item.id)}\n              />\n            );\n          })}\n\n          <button\n            className=\"btn btn-danger btn-block text-capitalize mt-5\"\n            onClick={clearList}\n          >\n            clear list\n          </button>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport socketIOClient from \"socket.io-client\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport uuid from \"uuid/v4\";\nlet item = { priority: \"high\" };\nconst PORT = process.env.PORT || 3000;\nconst socket = socketIOClient();\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: 0,\n      endpoint: \"http://127.0.0.1:4001\",\n      items: [],\n      id: uuid(),\n      item: item,\n\n      editItem: false\n    };\n  }\n\n  componentDidMount() {\n    //Very simply connect to the socket\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n    socket.on(\"updateTask\", data => {\n      console.log(data, \"asdasd\");\n      this.setState({ items: data });\n    });\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    item[name] = e.target.value;\n    this.setState({\n      item: item\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      id: this.state.id,\n      item: this.state.item\n    };\n    let updatedItems;\n    if (this.state.editItem) {\n      updatedItems = [...this.state.items];\n      updatedItems.splice(this.state.index, 0, newItem);\n    } else {\n      updatedItems = [...this.state.items, newItem];\n    }\n\n    this.setState({\n      items: updatedItems,\n      item: item,\n      id: uuid(),\n      editItem: false\n    });\n    item = { priority: \"high\" };\n    socket.emit(\"addTask\", newItem);\n  };\n\n  clearList = () => {\n    this.setState({\n      items: []\n    });\n  };\n\n  handleDelete = id => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.id !== id;\n    });\n\n    const index = this.state.items.findIndex(item => item.id == id);\n\n    this.setState({\n      items: filteredItems\n    });\n    socket.emit(\"deleteTask\", index);\n  };\n\n  handleEdit = id => {\n    const filteredItem = this.state.items.filter(item => item.id === id);\n    item = filteredItem[0].item;\n    if (this.state.editItem) {\n      const newItem = {\n        id: this.state.id,\n        item: this.state.item\n      };\n      let updatedItems;\n\n      updatedItems = [...this.state.items];\n      updatedItems.splice(this.state.index, 0, newItem);\n      updatedItems = updatedItems.filter(item => item.id != id);\n      this.setState({\n        items: updatedItems,\n        item: filteredItem[0].item,\n        id: filteredItem[0].id,\n        editItem: true\n      });\n      return;\n    }\n\n    const index = this.state.items.findIndex(item => item.id == id);\n    this.setState({\n      item: filteredItem[0].item,\n      id: filteredItem[0].id,\n      editItem: true,\n      index: index\n    });\n\n    this.handleDelete(id);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto col-md-8 mt-4\">\n              <h3 className=\"text-capitalize text-center\">todo input</h3>\n              <TodoInput\n                item={this.state.item}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                editItem={this.state.editItem}\n              />\n              <TodoList\n                items={this.state.items}\n                clearList={this.clearList}\n                handleDelete={this.handleDelete}\n                handleEdit={this.handleEdit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}